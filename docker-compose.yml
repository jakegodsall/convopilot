services:
  mysql:
    image: mysql:8.0
    container_name: convopilot-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: convopilot
      MYSQL_USER: convopilot_user
      MYSQL_PASSWORD: convopilot_pass
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d
    networks:
      - convopilot-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-prootpassword"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: convopilot-backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      APP_NAME: ConvoPilot
      DEBUG: "true"
      VERSION: 1.0.0
      MYSQL_USER: convopilot_user
      MYSQL_PASSWORD: convopilot_pass
      MYSQL_HOST: mysql
      MYSQL_PORT: 3306
      MYSQL_DATABASE: convopilot
      SECRET_KEY: your-super-secret-key-change-this-in-production-docker-version
      ALGORITHM: HS256
      ACCESS_TOKEN_EXPIRE_MINUTES: 30
      BACKEND_CORS_ORIGINS: http://localhost:3000,http://frontend:3000
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - convopilot-network
    volumes:
      - ./backend:/app:delegated
      - backend_cache:/app/__pycache__
    command: >
      sh -c "
        echo 'Waiting for MySQL to be ready...' &&
        sleep 10 &&
        echo 'Running database migrations...' &&
        alembic upgrade head &&
        echo 'Starting FastAPI development server...' &&
        uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
      "

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: convopilot-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://localhost:8000
      NEXT_TELEMETRY_DISABLED: 1
    depends_on:
      - backend
    networks:
      - convopilot-network
    volumes:
      - ./frontend:/app:delegated
      - /app/node_modules
      - /app/.next

networks:
  convopilot-network:
    driver: bridge
    name: convopilot-network

volumes:
  mysql_data:
    name: convopilot-mysql-data
  backend_cache:
    name: convopilot-backend-cache 